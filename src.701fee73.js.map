{"version":3,"sources":["src/index.js"],"names":["cards","name","img","sort","Math","random","grid","document","querySelector","resultDisplay","cardsChosen","cardsChosenIds","cardsWon","createBoard","i","length","card","createElement","setAttribute","addEventListener","flipCard","appendChild","cardID","getAttribute","console","log","push","setTimeout","checkForMatch","cardsNew","querySelectorAll","optionOneId","optionTwoId","alert","removeEventListener","textContent"],"mappings":";AAAA,IAAMA,EAAQ,CACZ,CACEC,KAAM,QACNC,IACE,mFAEJ,CACED,KAAM,eACNC,IACE,0FAEJ,CACED,KAAM,YACNC,IACE,uFAEJ,CACED,KAAM,QACNC,IACE,mFAEJ,CACED,KAAM,YACNC,IACE,uFAEJ,CACED,KAAM,SACNC,IACE,oFAEJ,CACED,KAAM,QACNC,IACE,mFAEJ,CACED,KAAM,eACNC,IACE,0FAEJ,CACED,KAAM,YACNC,IACE,uFAEJ,CACED,KAAM,QACNC,IACE,mFAEJ,CACED,KAAM,YACNC,IACE,uFAEJ,CACED,KAAM,SACNC,IACE,qFAINF,EAAMG,KAAK,WAAM,MAAA,GAAMC,KAAKC,WAE5B,IAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAgBF,SAASC,cAAc,WACzCE,EAAc,GACdC,EAAiB,GACjBC,EAAW,GAEf,SAASC,IACF,IAAA,IAAIC,EAAI,EAAGA,EAAId,EAAMe,OAAQD,IAAK,CAC/BE,IAAAA,EAAOT,SAASU,cAAc,OACpCD,EAAKE,aACH,MACA,mFAEFF,EAAKE,aAAa,UAAWJ,GAC7BE,EAAKG,iBAAiB,QAASC,GAC/Bd,EAAKe,YAAYL,IAMrB,SAASI,IACHE,IAAAA,EAAS,KAAKC,aAAa,WAC/BC,QAAQC,IAAIzB,EAAMsB,IAClBZ,EAAYgB,KAAK1B,EAAMsB,GAAQrB,MAC/BU,EAAee,KAAKJ,GACfJ,KAAAA,aAAa,MAAOlB,EAAMsB,GAAQpB,KACZ,IAAvBQ,EAAYK,QACdY,WAAWC,EAAe,KAI9B,SAASA,IACDC,IAAAA,EAAWtB,SAASuB,iBAAiB,OACrCC,EAAcpB,EAAe,GAC7BqB,EAAcrB,EAAe,GACnCa,QAAQC,IAAIM,EAAaC,GACrBD,IAAgBC,GAClBC,MAAM,wBACNJ,EAASE,GAAab,aACpB,MACA,mFAEFW,EAASG,GAAad,aACpB,MACA,oFAEOR,EAAY,KAAOA,EAAY,IACxCuB,MAAM,2BACNJ,EAASE,GAAab,aACpB,MACA,mFAEFW,EAASG,GAAad,aACpB,MACA,mFAEFW,EAASE,GAAaG,oBAAoB,QAASd,GACnDS,EAASG,GAAaE,oBAAoB,QAASd,GACnDR,EAASc,KAAKhB,KAEdmB,EAASE,GAAab,aACpB,MACA,mFAEFW,EAASG,GAAad,aACpB,MACA,mFAEFe,MAAM,cAERvB,EAAc,GACdC,EAAiB,GACjBF,EAAc0B,YAAcvB,EAASG,OACjCH,EAASG,SAAWf,EAAMe,OAAS,IACrCN,EAAc0B,YAAc,yBAzDhCX,QAAQC,IAAIzB,GACZa","file":"src.701fee73.js","sourceRoot":"..","sourcesContent":["const cards = [\n  {\n    name: \"fries\",\n    img:\n      \"https://raw.githubusercontent.com/kubowania/memory-game/master/images/fries.png\"\n  },\n  {\n    name: \"cheeseburger\",\n    img:\n      \"https://raw.githubusercontent.com/kubowania/memory-game/master/images/cheeseburger.png\"\n  },\n  {\n    name: \"ice-cream\",\n    img:\n      \"https://raw.githubusercontent.com/kubowania/memory-game/master/images/ice-cream.png\"\n  },\n  {\n    name: \"pizza\",\n    img:\n      \"https://raw.githubusercontent.com/kubowania/memory-game/master/images/pizza.png\"\n  },\n  {\n    name: \"milkshake\",\n    img:\n      \"https://raw.githubusercontent.com/kubowania/memory-game/master/images/milkshake.png\"\n  },\n  {\n    name: \"hotdog\",\n    img:\n      \"https://raw.githubusercontent.com/kubowania/memory-game/master/images/hotdog.png\"\n  },\n  {\n    name: \"fries\",\n    img:\n      \"https://raw.githubusercontent.com/kubowania/memory-game/master/images/fries.png\"\n  },\n  {\n    name: \"cheeseburger\",\n    img:\n      \"https://raw.githubusercontent.com/kubowania/memory-game/master/images/cheeseburger.png\"\n  },\n  {\n    name: \"ice-cream\",\n    img:\n      \"https://raw.githubusercontent.com/kubowania/memory-game/master/images/ice-cream.png\"\n  },\n  {\n    name: \"pizza\",\n    img:\n      \"https://raw.githubusercontent.com/kubowania/memory-game/master/images/pizza.png\"\n  },\n  {\n    name: \"milkshake\",\n    img:\n      \"https://raw.githubusercontent.com/kubowania/memory-game/master/images/milkshake.png\"\n  },\n  {\n    name: \"hotdog\",\n    img:\n      \"https://raw.githubusercontent.com/kubowania/memory-game/master/images/hotdog.png\"\n  }\n];\n\ncards.sort(() => 0.5 - Math.random());\n\nconst grid = document.querySelector(\".grid\");\nconst resultDisplay = document.querySelector(\"#result\");\nlet cardsChosen = [];\nlet cardsChosenIds = [];\nlet cardsWon = [];\n\nfunction createBoard() {\n  for (let i = 0; i < cards.length; i++) {\n    const card = document.createElement(\"img\");\n    card.setAttribute(\n      \"src\",\n      \"https://raw.githubusercontent.com/kubowania/memory-game/master/images/blank.png\"\n    );\n    card.setAttribute(\"data-id\", i);\n    card.addEventListener(\"click\", flipCard);\n    grid.appendChild(card);\n  }\n}\nconsole.log(cards);\ncreateBoard();\n\nfunction flipCard() {\n  let cardID = this.getAttribute(\"data-id\");\n  console.log(cards[cardID]);\n  cardsChosen.push(cards[cardID].name);\n  cardsChosenIds.push(cardID);\n  this.setAttribute(\"src\", cards[cardID].img);\n  if (cardsChosen.length === 2) {\n    setTimeout(checkForMatch, 500);\n  }\n}\n\nfunction checkForMatch() {\n  const cardsNew = document.querySelectorAll(\"img\");\n  const optionOneId = cardsChosenIds[0];\n  const optionTwoId = cardsChosenIds[1];\n  console.log(optionOneId, optionTwoId);\n  if (optionOneId === optionTwoId) {\n    alert(\"chosen the same card\");\n    cardsNew[optionOneId].setAttribute(\n      \"src\",\n      \"https://raw.githubusercontent.com/kubowania/memory-game/master/images/blank.png\"\n    );\n    cardsNew[optionTwoId].setAttribute(\n      \"src\",\n      \"https://raw.githubusercontent.com/kubowania/memory-game/master/images/blank.png\"\n    );\n  } else if (cardsChosen[0] === cardsChosen[1]) {\n    alert(\"you have found a match!\");\n    cardsNew[optionOneId].setAttribute(\n      \"src\",\n      \"https://raw.githubusercontent.com/kubowania/memory-game/master/images/white.png\"\n    );\n    cardsNew[optionTwoId].setAttribute(\n      \"src\",\n      \"https://raw.githubusercontent.com/kubowania/memory-game/master/images/white.png\"\n    );\n    cardsNew[optionOneId].removeEventListener(\"click\", flipCard);\n    cardsNew[optionTwoId].removeEventListener(\"click\", flipCard);\n    cardsWon.push(cardsChosen);\n  } else {\n    cardsNew[optionOneId].setAttribute(\n      \"src\",\n      \"https://raw.githubusercontent.com/kubowania/memory-game/master/images/blank.png\"\n    );\n    cardsNew[optionTwoId].setAttribute(\n      \"src\",\n      \"https://raw.githubusercontent.com/kubowania/memory-game/master/images/blank.png\"\n    );\n    alert(\"Try Again\");\n  }\n  cardsChosen = [];\n  cardsChosenIds = [];\n  resultDisplay.textContent = cardsWon.length;\n  if (cardsWon.length === cards.length / 2) {\n    resultDisplay.textContent = \"Congratulations! Win!\";\n  }\n}\n"]}